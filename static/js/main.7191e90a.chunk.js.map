{"version":3,"sources":["actionTypes/index.js","components/Home/index.js","actions/index.js","components/About/index.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_PRODUCT","DELETE_PRODUCT","Home","this","props","userName","products","length","map","item","name","onClick","removeProduct","id","Component","connect","state","dispatch","type","payload","store","productsCount","addProductProp","data","useState","itemName","setitem","onChange","e","target","value","Math","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","configureStore","createStore","updateProduct","filter","ReactDOM","render","document","getElementById"],"mappings":"iNAAaA,EAAc,cACdC,EAAiB,iB,OCGjBC,EAAb,4JACI,WAAU,IAAD,OACL,OACI,gCACI,mDAAsBC,KAAKC,MAAMC,YAChCF,KAAKC,MAAME,SAASC,QAAUJ,KAAKC,MAAME,SAASE,KAAI,SAACC,GAAD,OAAU,qCAC7D,6BAAKA,EAAKC,OACV,wBAAQC,QAAS,kBAAM,EAAKP,MAAMQ,cAAcH,EAAKI,KAArD,iCAPpB,GAA0BC,aAuBXC,eATS,SAACC,GAAD,MAAY,CAChCX,SAAUW,EAAMX,SAChBC,SAAUU,EAAMV,aAGO,SAACW,GAAD,MAAe,CACtCL,cAAe,SAACC,GAAD,OAAQI,ECjBgB,CACvCC,KAAMjB,EACNkB,QDe8CN,QAGnCE,CAA6Cb,G,QEF7Ca,eAJS,SAACK,GAAD,MAAY,CAChCC,cAAeD,EAAMd,SAASC,WALP,SAACU,GAAD,MAAe,CACtCK,eAAgB,SAACC,GAAD,OAAUN,EDhBU,CACpCC,KAAMlB,EACNmB,QCc8CI,QAOnCR,EArBD,SAAC,GAAwB,IAAtBO,EAAqB,EAArBA,eACb,EAA4BE,mBAAS,IAArC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OAAQ,qCACJ,uCACA,uBAAOC,SAAU,SAACC,GAAD,OAAOF,EAAQE,EAAEC,OAAOC,QAAQA,MAAOL,IACxD,wBAAQd,QAAS,WACbW,EAAe,CAAET,GAAIkB,KAAKC,SAAUtB,KAAMe,IAC1CC,EAAQ,KAFZ,uBCIOO,EATH,WACV,OAAQ,qCACN,+CACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCLRQ,EAAe,CACjBrC,SAAU,CAAC,CAAEI,KAAM,OAAQG,GAAI,MAC/BR,SAAU,YCCCuC,EAFQC,aDIR,WAA8C,IAA7C7B,EAA4C,uDAApC2B,EAAoC,yCAApBzB,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1C,OAAQD,GAEJ,KAAKlB,EACD,OAAO,2BAAKgB,GAAZ,IAAmBV,SAAS,GAAD,mBAAMU,EAAMV,UAAZ,CAAsBa,MAErD,KAAKlB,EACD,IAAMY,EAAKM,EACL2B,EAAgB9B,EAAMV,SAASyC,QAAO,SAAAtC,GAAI,OAAIA,EAAKI,KAAOA,KAChE,OAAO,2BAAKG,GAAZ,IAAmBV,SAAUwC,IAEjC,QACI,OAAO9B,MEXnBgC,IAASC,OACP,cAAC,IAAD,CAAU7B,MAAOwB,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.7191e90a.chunk.js","sourcesContent":["export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteProduct } from '../../actions'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home Component - {this.props.userName}</h1>\r\n                {this.props.products.length && this.props.products.map((item) => <>\r\n                    <h3>{item.name}</h3>\r\n                    <button onClick={() => this.props.removeProduct(item.id)}>DELETE</button>\r\n                </>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userName: state.userName,\r\n    products: state.products\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeProduct: (id) => dispatch(deleteProduct(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import { ADD_PRODUCT, DELETE_PRODUCT } from \"../actionTypes\"\r\n\r\nexport const addProduct = (payload) => ({\r\n    type: ADD_PRODUCT,\r\n    payload: payload\r\n})\r\n\r\nexport const deleteProduct = (payload) => ({\r\n    type: DELETE_PRODUCT,\r\n    payload\r\n})\r\n\r\n","import React, { useState } from 'react';\r\nimport { addProduct } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst About = ({ addProductProp }) => {\r\n    const [itemName, setitem] = useState(\"\")\r\n    return (<>\r\n        <h1>About</h1>\r\n        <input onChange={(e) => setitem(e.target.value)} value={itemName} />\r\n        <button onClick={() => {\r\n            addProductProp({ id: Math.random(), name: itemName })\r\n            setitem(\"\")\r\n        }\r\n        }>ADD</button>\r\n    </>);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addProductProp: (data) => dispatch(addProduct(data))\r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    productsCount: store.products.length\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React from 'react';\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  return (<>\n    <h1>App Component</h1>\n    <Home />\n    <hr />\n    <About />\n  </>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_PRODUCT, DELETE_PRODUCT } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    products: [{ name: \"ABCD\", id: \"1\" }],\r\n    userName: \"USERNAME\"\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case ADD_PRODUCT:\r\n            return { ...state, products: [...state.products, payload] }\r\n\r\n        case DELETE_PRODUCT: {\r\n            const id = payload;\r\n            const updateProduct = state.products.filter(item => item.id !== id)\r\n            return { ...state, products: updateProduct }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst configureStore = createStore(reducers);\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={configureStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}